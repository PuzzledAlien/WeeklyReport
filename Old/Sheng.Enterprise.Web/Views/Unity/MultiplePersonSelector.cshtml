@{
    ViewBag.Title = "MultiplePersonSelector";
    Layout = "~/Views/Shared/_LayoutBasal.cshtml";
}

@Styles.Render("~/Content/zTreeStyle/zTreeStyle.css")
@Scripts.Render("~/Scripts/ztree/jquery.ztree.core-3.5.min.js")


<style type="text/css">
    .ztree li span.button.switch.level0 {
        visibility: hidden;
        width: 1px;
    }

    .ztree li ul.level0 {
        padding: 0;
        background: none;
    }
</style>

<script>

    var _treeObj;

    var _selectedPersonArray = new Array();

    //当前页
    var _currentPage = 1;

    $(document).ready(function () {
        loadOrganizationTree();
    });

    function loadOrganizationTree() {
        $.ajax({
            url: "/Api/Domain/GetOrganizationList?domainId=" + '@ViewBag.Domain.Id',
            type: "POST",
            dataType: "json",
            success: function (data, status, jqXHR) {
                if (data.Success) {
                    var setting = {
                        view: {
                            dblClickExpand: false,
                            showLine: true,
                            selectedMulti: false
                            //  fontCss: setFontCss
                        },
                        data: {
                            key: {
                                name: "Name"
                            },
                            simpleData: {
                                enable: true,
                                idKey: "Id",
                                pIdKey: "Parent",
                                rootPId: "@ViewBag.RootOrganization.Id"
                            }
                        },
                        callback: {
                            onClick: zTreeOnClick
                        }
                    };

                    var zNodes = new Array();

                    @*var root = new Object();
                    root.Id = '@ViewBag.Domain.Id';
                    root.Parent = '';
                    root.Name = '@ViewBag.Domain.Name';
                    zNodes[0] = root;*@

                    //var i = 1;
                    var i = 0;
                    $.each(data.Data, function (n, value) {
                        var oranization = new Object();
                        oranization.Id = value.Id;
                        oranization.Parent = value.Parent;
                        oranization.Name = value.Name;
                        zNodes[i] = oranization;
                        i++;
                    });

                    _treeObj = $.fn.zTree.init($("#tree"), setting, zNodes);
                    _treeObj.expandAll(true);
                    var nodes = _treeObj.getNodes();
                    if (nodes.length > 0) {
                        _treeObj.selectNode(nodes[0]);
                        selectNode(nodes[0]);
                    }

                } else {
                    layerAlert(data.Message);
                }
            },
            error: function (xmlHttpRequest) {
                alert("Error: " + xmlHttpRequest.status);
            }
        });
    }

    function zTreeOnClick(event, treeId, treeNode) {
        selectNode(treeNode);
    }

    function selectNode(treeNode) {
        //getUserList(treeNode.Id);
        getUserList();
    }

    function getUserList(targetPage) {
        var treeNode = getSelectedNode();
        if (treeNode == null)
            return;

        var organizationId = treeNode.Id;

        var args = new Object();
        args.Page = targetPage || 1;
        args.PageSize = 5;
        args.OrganizationId = organizationId;
        args.Name = $("#txtName").val();
        args.SearchOrganization = $("#selectSearchOrganization").val();

        var layerIndex = layer.load(0, {
            shade: [0.2, '#fff']
        });

        //http://www.jb51.net/article/48943.htm
        //$('#tableUser tr:gt(1)').remove();

        $.ajax({
            url: "/Api/User/GetUserList",
            type: "POST",
            dataType: "json",
            data: JSON.stringify(args),
            success: function (data, status, jqXHR) {
                //  alert(data);
                layer.close(layerIndex);

                if (data.Success) {
                    //$.each(data.Data.UserList, function (n, value)
                    //{
                    //    addUserRow(value);
                    //});

                    //      alert(JSON.stringify(data));

                    var resultObj = data.Data;

                    _currentPage = resultObj.Page;

                    //alert(JSON.stringify(resultObj));
                    var gettpl = document.getElementById('tableTemplate').innerHTML;
                    laytpl(gettpl).render(resultObj.ItemList, function (html) {
                        document.getElementById('divTableBodyContainer').innerHTML = html;
                        fitTable();
                    });

                    laypage({
                        skin: 'yahei',
                        cont: document.getElementById('divPagingContainer'),
                        pages: resultObj.TotalPage, //总页数
                        curr: resultObj.Page, //当前页
                        groups: 7, //连续显示分页数
                        jump: function (obj, first) {
                            if (!first) { //点击跳页触发函数自身，并传递当前页：obj.curr
                                getUserList(obj.curr);
                            }
                        }
                    });

                } else {
                    layerAlert(data.Message);
                }
            },
            error: function (xmlHttpRequest) {
                layer.close(layerIndex);

                alert("Error: " + xmlHttpRequest.status);
            }
        });
    }

    function addUserRow(user) {
        var table = document.getElementById("tableUser");
        var newRow = table.insertRow();

        var tdNumber = newRow.insertCell();
        tdNumber.height = 35;
        tdNumber.innerHTML = user.Number;

        var tdName = newRow.insertCell();
        tdName.innerHTML = "<a href='javascript:void(0)' onclick=\"selectPerson('" + user.Id + "','" + user.Name + "')\">" + user.Name + "</a>";

    }

    function selectPerson(id, name) {

        for (i = 0; i < _selectedPersonArray.length; i++) {
            if (_selectedPersonArray[i].id == id)
                return;
        }

        var person = new Object();
        person.id = id;
        person.name = name;

        _selectedPersonArray[_selectedPersonArray.length] = person;

        renderSelectedPerson();
    }

    function removeSelectedPerson(i) {
        _selectedPersonArray.splice(i, 1);
        renderSelectedPerson();
    }

    function renderSelectedPerson() {

        $("#spanSelectedPersonCount").html(_selectedPersonArray.length);

        var gettpl = document.getElementById('selectedPersonTemplate').innerHTML;
        laytpl(gettpl).render(_selectedPersonArray, function (html) {
            document.getElementById('divSelectedPersonContainer').innerHTML = html;
            fitTable();
        });
    }

    function closePersonSelector() {
        var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
        parent.layer.close(index); //再执行关闭
    }

    function scrollHeader() {
        // alert(divTableBodyContainer.scrollLeft);
        var ml = 0 - divTableBodyContainer.scrollLeft;
        document.getElementById("tableHeader").style.cssText = "margin-left:" + ml + "px;";
    }

    function fitTable() {
        $("#tableBody").width($("#tableHeader").width());

        $("#tableHeader tr:first").each(function (n, value) {
            $(this).find("td").each(function (n, value) {
                $("#tableBody tr:first td:eq(" + n + ")").width(value.width)
            });
        });
    }

    function getSelectedNode() {
        var nodes = _treeObj.getSelectedNodes();
        if (nodes.length != 1)
            return null;

        return nodes[0];
    }

    function submit() {
        var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引

        parent.selectMultiplePerson(_selectedPersonArray, index);
    }

</script>

<script id="tableTemplate" type="text/html">

    <table id="tableBody" border="0" cellspacing="0" cellpadding="0">
        {{# for(var i = 0, len = d.length; i < len; i++){ }}

        <tr>
            <td height="35">{{ d[i].Account }}</td>
            <td><a href="javascript:void(0)" onclick="selectPerson('{{ d[i].Id }}','{{ d[i].Name }}')">{{ d[i].Name }}</a></td>
        </tr>

        {{# } }}

    </table>

</script>

<script id="selectedPersonTemplate" type="text/html">

    {{# for(var i = 0, len = d.length; i < len; i++){ }}

    <div style="float:left;margin:5px; border:1px solid gray ;padding:2px 6px">
        <span>{{ d[i].name }}</span>
        <span style="margin-left:5px;font-size:10px; cursor:pointer " onclick="removeSelectedPerson({{ i }})">X</span>
    </div>

    {{# } }}


    <div style="clear:both">
    </div>

</script>

<div style="margin:10px 20px;">
    <div style="float:left;line-height:30px;">
        <b>查询</b>
    </div>
    <div style="float:left;line-height:30px;margin-left:20px;">
        <span>姓名：</span>
        <input class="input_16" style="width:100px;" id="txtName" />
    </div>
    <div style="float:left;line-height:30px;margin-left:20px;">
        <span>组织机构：</span>
        <select class="input_16" style="width:170px;" id="selectSearchOrganization">
            <option value="0">当前选中及下级</option>
            <option value="1">仅当前选中</option>
        </select>
    </div>
    <div style="float:left; margin-left:20px;">
        <input name="btnCreateChildOrganization" type="button" class="btn_blue" id="btnCreateChildOrganization" value="查询" onclick="getUserList()" />
    </div>
    <div style="clear:both"></div>
</div>

<div style="margin:10px; background-color:#ccc; height:1px"></div>

<div style="position:absolute;top:60px; bottom:135px; left:20px;right:20px;border:0px solid yellow">
    <div style="position:absolute;top:0px;left:0px;bottom:0px;width:200px;overflow:auto">
        <ul id="tree" class="ztree"></ul>
    </div>
    <div style="position:absolute;top:0px;left:210px;bottom:0px;right:0px;overflow:auto; ">
        <div style="overflow:hidden; padding-left:20px;" class="tableHeader">
            <table id="tableHeader" border="0" cellspacing="0" cellpadding="0" width="340" height="47">
                <tr>
                    <td width="150"><strong>工号</strong></td>
                    <td width="190"><strong>姓名</strong></td>
                </tr>
            </table>
        </div>
        <div id="divTableBodyContainer" style="overflow:auto;  padding-left:20px;" onscroll="scrollHeader()">
            <!--table必须要有一个确切的宽度，否则无法超出div-->
        </div>
        <div id="divPagingContainer" style="margin-top:20px; margin-bottom:20px;text-align:right">
        </div>
    </div>
</div>




<div style="position:absolute; bottom:55px; left:20px;right:20px;height:70px; padding:5px; border:1px solid lightgray;overflow:auto" 
     id="divSelectedPersonContainer">

</div>


<div style="position:absolute; bottom:15px; left:20px;right:20px;">

    <div style="float:left;">
        已选用户：<span id="spanSelectedPersonCount">0</span>
    </div>
    <div style="float:right">
        <input name="btnSave" type="button" class="btn_blue" id="btnSave" value="确 定" onclick="submit()" />
        <input type="button" class="btn_blue" value="取 消" style="margin-left:1px;" onclick="closePersonSelector()" />
    </div>
    <div style="clear:both">
    </div>
</div>
